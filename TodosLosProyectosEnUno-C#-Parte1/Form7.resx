<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>